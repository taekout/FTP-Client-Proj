 - 기말 프로젝 관련 리스트 -

기말 프로젝은 팀단위 프로젝을 수행함으로써 그 결과를 보고 평가를 하겠습니다. 

팀원수는 3~4명 정도, 본 과목이 전공이 아니신분들은 개인적으로 저에게 찾아 

오시면 팀배정을 해드립니다.  

 

- 얼마전 메일을 하나 받았습니다. 열심히 공부를 하건 않하건 성적이 좋게 나와 차이가 없다는

것이 었습니다. 그런데 제가 전에도 말씀드렸지만 제 수업은 성적자체에 목적을 둔것이 아니라 

분명 프로그래밍 기법 자체에 목적을 둔것이었습니다. 따라서 성적이라는 부담을 줄이고 최대한

이시간을 통해 부족하나마 MFC 프로그래밍 관련 기법을 배워 보라는 것이 었습니다.  하지만 

제 수업을 듣는 여러사람들의 의견이 성적을 중요하게 여기는 것 같고 프로그램 자체 공부보다는

단순히 성적에 연연하는것 같았습니다. 따라서 그 의견을 수렴하여 종전의 성적관리를 보다 

단호하게 처리해 나갈 예정입니다. 앞으로의 성적관리는 출석및 중간과제 기말과제 중간고사를 

철저히 참조해 등급을 기존의 B이상에서 D- 까지 낮추겠습니다. 이점 숙지해주시기 바라고 참고로

이번 기말 프로젝은 기말 고사를 대체하고 전체 성적의 40%를 차지 하는 만큼 열심히 해주시기

바랍니다. 

 

- 성적 관련 비율 

A: 15%, B: 25%, C:50%, D: 10% #!! 기말 프로젝을 않했을 경우 F

 

- 기간 

기말고사 보기 일주일 전까지

 

- 참조사항

1. 실제 코딩을 했을경우 코드분석의 가식성을 높히기 위해 자신들이 만든 기능들은 모두

 Class로 만들어야 합니다. 만약 변수 하나 함수 하나라도 불필요하게 MFC 기본 클래스 

예를 들어 View, Doc, MainFrame, 등에 존재하면 감점 처리

 

2. 프로그램 관련, 작성자, 사용법등의 내용이 반드시 존재해야 하며 그러한 내용들은 프로그램

내에 도움말 항목을 만들어 그 항목을 선택했을 경우 MS 도움말 서식으로 화면에 보여져야 합니다. 

도움말 제작 관련 항목은 MFC응용 책등을 보면 나와 있으므로 참조해주시기 바랍니다. 

 

3. 각각의 소스에 필요로 하는 기능들을 Source Group등을 참조하는것은 상관없습니다. 단지 

그러한 소스들을 만드신 분들의 노고를 생각해 어느 사이트의 누구의 소스인지를 적어야 합니다. 

 

4. 프로그램을 테스트 했을때 Exception 오류가 발생하면 0점 처리 됩니다. 오류가 발생했을경우

사전에 미리 그 사실을 통보하고 확인을 시킨후 처리를 할 예정입니다. 숙제를 제출한후 이러한

오류가가 발생하면 더 이상 추가적인 수정기회가 없으므로 제출전 철저한 디버깅을 하시기

바랍니다. 

 

5. 다른 팀의 소스를 복사해서 위조했을 경우 그에 대해서 추후 혐의가 있는 양팀을 불러 

양쪽다 0점 처리를 합니다. 

 

6. 아래 나와 있는 리스트 이외에 자기팀이 만들고 싶었던 프로그램이 있으면 저에게 메일을

보내거나 직접 찾아와 면담후 결정하도록 하겠습니다. 

 

7. 프로젝을 완료한뒤 자신들이 만든 프로그램에 대해 발표를 해야 합니다. 내용은 파워포인트

형식으로 하고 내용은 사용되었던 알고리즘, 전체적인 구조등의 내용입니다. 

 

8. 각 프로젝등의 팀배정은 7개팀, 선착순입니다. 

 

- 프로젝 리스트 -

 

1. MP3 Player 

MP3 Player를 만들어보는 것입니다. 

기본적으로 MP3를 PLAY기능은 당연히 있어야 합니다. 그외 기능은 아래와 같습니다. 

- Skin을 입힐수 있어야 합니다. 

- Play, Stop, Volume, Pause, 등은 반드시 있어야 합니다. 

- Mp3 Play LIst 관리자가 있어야 합니다. 

- 위의 기능이외에 이퀄라이져라든가 기타 음악을 듣는데 필요한 기능이 더 들어가면

  가산점을 더 드립니다. 

 

2. 동영상 Player

동영상을 화면에 보여 줄수 있는 Player를 만들어 보는것 입니다. 

기본적으로 Mpeg등의 화일을 화면에 보여 줄수 있어야 합니다. 지원되는 영상화일의 갯수에

대한 점수는 총 기말의 총 40%중 25%를 활당합니다. 따라서 종류가 1개뿐이면 

10%이고 그외에 추가 될때마다 5%씩을 활당하겠습니다. 25%를 초과 했을 경우 그만큼의 점수가

기말 성적이외의 보너스 점수로 더해집니다. 

- Skin을 입힐수 있어야 합니다.

- Play, Stop, Volume, Pause, 화면 탐색 기능 등은 반드시 이어야 합니다. 

- 위의 기능이외에 동영상을 보는데 편리한 기능들이 추가되면 가산점이 있습니다. 

 

3. FTP DownLoad 프로그램

WS-FTP와같은 FTP 관련 다운로드 프로그램을 만들어 보는 것입니다. 

- ftp 사이트 접속, Local File 관리창, Remote File 관리해주는 부분이 있어야 합니다. 

- 여러 사이트들을 관리해줄수 있는 접속 관리 창이 있어야 합니다. 

- Remote Site에서 파일을 받을때의 인터페이스는 직관적이야 합니다. 예를 들어

 마우스를 이용해 해당사이트의 파일을 local로 Drag&Drop했을때 화일전송이 이루어져야 

합니다. 

- 프로그램 내부에 Local, Remot안에 있는 파일들을 지우고, 이름을 바꿀수 있는 기능이 있어야

합니다. 

- 위의 기능이외에 편리한 기능을 추가 했을 경우 가산점 있음



========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : FTP
========================================================================


AppWizard has created this FTP application for you.  This application
not only demonstrates the basics of using the Microsoft Foundation classes
but is also a starting point for writing your application.

This file contains a summary of what you will find in each of the files that
make up your FTP application.

FTP.dsp
    This file (the project file) contains information at the project level and
    is used to build a single project or subproject. Other users can share the
    project (.dsp) file, but they should export the makefiles locally.

FTP.h
    This is the main header file for the application.  It includes other
    project specific headers (including Resource.h) and declares the
    CFTPApp application class.

FTP.cpp
    This is the main application source file that contains the application
    class CFTPApp.

FTP.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
	Visual C++.

FTP.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

res\FTP.ico
    This is an icon file, which is used as the application's icon.  This
    icon is included by the main resource file FTP.rc.

res\FTP.rc2
    This file contains resources that are not edited by Microsoft 
	Visual C++.  You should place all resources not editable by
	the resource editor in this file.

FTP.reg
    This is an example .REG file that shows you the kind of registration
    settings the framework will set for you.  You can use this as a .REG
    file to go along with your application or just delete it and rely
    on the default RegisterShellFileTypes registration.



/////////////////////////////////////////////////////////////////////////////

For the main frame window:

MainFrm.h, MainFrm.cpp
    These files contain the frame class CMainFrame, which is derived from
    CMDIFrameWnd and controls all MDI frame features.

res\Toolbar.bmp
    This bitmap file is used to create tiled images for the toolbar.
    The initial toolbar and status bar are constructed in the CMainFrame
    class. Edit this toolbar bitmap using the resource editor, and
    update the IDR_MAINFRAME TOOLBAR array in FTP.rc to add
    toolbar buttons.
/////////////////////////////////////////////////////////////////////////////

For the child frame window:

ChildFrm.h, ChildFrm.cpp
    These files define and implement the CChildFrame class, which
    supports the child windows in an MDI application.

/////////////////////////////////////////////////////////////////////////////

AppWizard creates one document type and one view:

FTPDoc.h, FTPDoc.cpp - the document
    These files contain your CFTPDoc class.  Edit these files to
    add your special document data and to implement file saving and loading
    (via CFTPDoc::Serialize).

FTPView.h, FTPView.cpp - the view of the document
    These files contain your CFTPView class.
    CFTPView objects are used to view CFTPDoc objects.

res\FTPDoc.ico
    This is an icon file, which is used as the icon for MDI child windows
    for the CFTPDoc class.  This icon is included by the main
    resource file FTP.rc.


/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named FTP.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Visual C++ reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

If your application uses MFC in a shared DLL, and your application is 
in a language other than the operating system's current language, you
will need to copy the corresponding localized resources MFC42XXX.DLL
from the Microsoft Visual C++ CD-ROM onto the system or system32 directory,
and rename it to be MFCLOC.DLL.  ("XXX" stands for the language abbreviation.
For example, MFC42DEU.DLL contains resources translated to German.)  If you
don't do this, some of the UI elements of your application will remain in the
language of the operating system.

/////////////////////////////////////////////////////////////////////////////
